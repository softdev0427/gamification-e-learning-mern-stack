{"version":3,"sources":["views/adminpanel/Edituser/Header.js","views/adminpanel/Edituser/Profile.js","views/adminpanel/Edituser/index.js","hooks/useIsMountedRef.js"],"names":["useStyles","makeStyles","theme","root","image","width","maxHeight","Header","className","rest","classes","user","useSelector","state","account","clsx","Grid","alignItems","container","justify","spacing","item","md","xs","Typography","variant","color","username","Hidden","smDown","alt","src","CustomerEditForm","enqueueSnackbar","useSnackbar","initialValues","location","wallet","password","passwordConfirm","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","axios","post","API_BASE_URL","id","_id","then","response","success","data","message","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardHeader","title","Divider","CardContent","TextField","error","Boolean","fullWidth","helperText","label","name","type","onBlur","onChange","value","disabled","email","role","moment","createdAt","format","Box","mt","display","Button","component","RouterLink","to","flexGrow","backgroundColor","palette","background","dark","paddingTop","paddingBottom","OverviewView","isMountedRef","useIsMountedRef","useState","setUser","params","useParams","getCustomers","useCallback","get","userId","current","useEffect","Page","Container","maxWidth","Profile","isMounted","useRef"],"mappings":"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","file":"static/js/46.be13169f.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    width: '80%',\n    maxHeight: 200\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            Hi,\n            {' '}\n            {user.username}\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n          >\n            This is admin panel.<br />\n            This is user editing page.\n          </Typography>\n        </Grid>\n        <Hidden smDown>\n          <Grid\n            item\n            md={6}\n          >\n            <img\n              alt=\"Cover\"\n              className={classes.image}\n              src=\"/static/images/admin/header.jpg\"\n            />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport {Link as RouterLink} from 'react-router-dom';\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction CustomerEditForm({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        location: user.location ||'',\n        username: user.username ||'',\n        wallet:user.wallet,\n        password:'',\n        passwordConfirm:''\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string().max(255).required('Name is required'),\n        location: Yup.string().max(255).required('Location is required'),\n        wallet: Yup.number(),    \n        password: Yup.string()\n        .min(5, 'Must be at least 5 characters')\n        .max(255),\n      passwordConfirm: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')  \n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          const {location, username, password, wallet} =values;\n\n          await axios.post(API_BASE_URL+'admin/users/update', { id:user._id, location, username, wallet, password})\n            .then((response) => {\n                  setStatus({ success: true });\n                  setSubmitting(false);  \n                  enqueueSnackbar(response.data.message, {\n                  variant: 'success',\n                }); \n              \n            }) \n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n\n          <Card>\n            <CardHeader\n            title= \"Please change this user's profile.\" />\n             <Divider />\n            <CardContent>          \n              <Grid\n                container\n                spacing={3}\n              >\n               <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.username && errors.username)}\n                    fullWidth\n                    helperText={touched.username && errors.username}\n                    label=\"User name\"\n                    name=\"username\"\n                    type='string'\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.username}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Email address\"\n                    name=\"email\"\n                    disabled\n                    value={user.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n    \n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.location && errors.location)}\n                    fullWidth\n                    helperText={touched.location && errors.location}\n                    label=\"Location\"\n                    name=\"location\"\n                    type='string'\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.location}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Role\"\n                    name=\"role\"\n                    disabled\n                    value={user.role}\n                    variant=\"outlined\"\n                  />\n                </Grid>            \n\n              <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.wallet && errors.wallet)}\n                    fullWidth\n                    helperText={touched.wallet && errors.wallet}\n                    label=\"Funds(VN)\"\n                    name=\"wallet\"\n                    type='number'\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.wallet}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"created date\"\n                    name=\"createdAt\"\n                    disabled\n                    value={moment(user.createdAt).format(\"YYYY-MM-DD\")}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    type='password'\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                   <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                </Grid>\n              <Box mt={2} display=\"flex\">\n              <Button            \n                  variant=\"contained\"\n                  color=\"secondary\"\n                  component={RouterLink}\n                  to=\"/app/adminpanel/users\"\n                >\n                  Back \n                </Button>\n                <Box flexGrow={1} />\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update \n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nCustomerEditForm.propTypes = {\n  className: PropTypes.string,\n  user:PropTypes.object\n};\n\nexport default CustomerEditForm;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n}  from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Profile from './Profile';\nimport { API_BASE_URL } from 'src/config';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OverviewView() {\n    const classes = useStyles();\n    const isMountedRef = useIsMountedRef();\n    const [user, setUser] = useState(null);\n    const params = useParams();\n  \n    const getCustomers = useCallback(() => {\n      axios\n        .get(API_BASE_URL + 'admin/users/edit/' + params.userId)\n        .then((response) => {\n          if (isMountedRef.current) {\n            setUser(response.data.user);\n          }\n        });\n    }, [isMountedRef, params.userId]);\n  \n    useEffect(() => {\n      getCustomers();\n    }, [getCustomers]);\n  \n    if (!user) {\n      return null;\n    }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Edit user\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />     \n        <Box mt={6}>\n          <Profile user = {user} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OverviewView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n"],"sourceRoot":""}