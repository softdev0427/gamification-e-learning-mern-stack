{"version":3,"sources":["views/wallet/Header.js","views/wallet/Statistics.js","views/wallet/listUser/financeListView/Header.js","views/wallet/listUser/financeListView/Results.js","views/wallet/listUser/financeListView/index.js","views/wallet/index.js","hooks/useIsMountedRef.js","utils/getInitials.js"],"names":["useStyles","makeStyles","theme","root","image","width","maxHeight","Header","className","rest","classes","user","useSelector","state","account","clsx","Grid","alignItems","container","justify","spacing","item","md","xs","Typography","variant","color","username","Hidden","smDown","alt","src","padding","textAlign","label","marginLeft","overline","marginTop","Statistics","isMountedRef","useIsMountedRef","useState","statistics","setStatistics","getStatistics","useCallback","axios","get","API_BASE_URL","_id","then","response","current","data","useEffect","Card","sm","loans","style","gifts","borrows","receives","sortOptions","value","descendingComparator","a","b","orderBy","applySort","customers","sort","split","comparator","order","getComparator","stabilizedThis","map","el","index","avatar","height","marginRight","Results","page","setPage","limit","setLimit","setSort","paginatedCustomers","slice","applyPagination","Divider","Box","p","minHeight","display","TextField","name","onChange","event","persist","target","select","SelectProps","native","option","key","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","customer","hover","userid","Avatar","getInitials","Link","location","wallet","Label","getGiftReq","getLoanReq","sendGiftReq","sendLoanReq","Button","backgroundColor","size","component","RouterLink","to","TablePagination","count","length","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","palette","background","dark","paddingTop","paddingBottom","CustomerListView","relations","setRelations","getCustomers","relation","Container","maxWidth","mt","OverviewView","Page","title","isMounted","useRef","replace","v","toUpperCase","join"],"mappings":"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","file":"static/js/42.e7db586b.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    width: '100%',\n    maxHeight: 200\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            wallet\n          </Typography>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            Hi,\n            {' '}\n            {user.username}\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n          >\n            Your financial relationship is as follows\n          </Typography>\n        </Grid>\n        <Hidden smDown>\n          <Grid\n            item\n            md={6}\n          >\n            <img\n              alt=\"Cover\"\n              className={classes.image}\n              src=\"/static/images/wallet/walletHeader.svg\"\n            />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nfunction Statistics({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [statistics, setStatistics] = useState([]);\n  const {user} = useSelector((state) => state.account);\n\n  const getStatistics = useCallback(() => {\n    axios\n      .get(API_BASE_URL + 'account/wallet/statistics/' + user._id)\n      .then((response) => {\n        if (isMountedRef.current) {\n          setStatistics(response.data.statistics);\n        }\n      });\n  }, [isMountedRef, user._id]);\n\n  useEffect(() => {\n    getStatistics();\n  }, [getStatistics]);\n\n  if (!statistics) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.loans}\n            <div style={{width:\"20px\"}}></div>\n            VN\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Loans\n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.gifts}\n            <div style={{width:\"20px\"}}></div>\n            VN\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n           total gifts(sent) \n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.borrows}\n            <div style={{width:\"20px\"}}></div>\n            VN\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n           total borrows \n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.receives}\n            <div style={{width:\"20px\"}}></div>\n            VN\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total gifts(received)\n          </Typography>\n        </Grid>\n\n      </Grid>\n    </Card>\n  );\n}\n\nStatistics.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All users related to finance\n        </Typography>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport Label from 'src/components/Label';\n\nconst sortOptions = [\n  {\n    value: 'loans|desc',\n    label: 'Loan (high to low)'\n  },\n  {\n    value: 'loans|asc',\n    label: 'Loan (low to high)'\n  },\n  {\n    value: 'borrows|desc',\n    label: 'borrowed (high to low)'\n  },\n  {\n    value: 'borrows|asc',\n    label: 'borrowed (low to high)'\n  },\n  {\n    value: 'gifts|desc',\n    label: 'gift gave(high to low)'\n  },\n  {\n    value: 'gifts|asc',\n    label: 'gift gave(low to high)'\n  },\n  {\n    value: 'receives|desc',\n    label: 'gift received (high to low)'\n  },\n  {\n    value: 'receives|asc',\n    label: 'gift received  (low to high)'\n  }\n];\n\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySort(customers, sort) {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    // eslint-disable-next-line no-shadow\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Results({ className, customers, ...rest }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [sort, setSort] = useState(sortOptions[0].value);\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const sortedCustomers = applySort(customers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <TextField\n          label=\"Sort By\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n\n      <PerfectScrollbar>\n        <Box minWidth={1000}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  total <br />(VN)\n                </TableCell>\n                <TableCell>\n                  loan<br />(VN)\n                </TableCell>\n                <TableCell>\n                  borrowed<br />(VN)\n                </TableCell>\n                <TableCell>\n                  gaveGift<br />(VN)\n                </TableCell>\n                <TableCell>\n                  receivedGift<br />(VN)\n                </TableCell>  \n                <TableCell>\n                  giftReq<br />got(VN)\n                </TableCell> \n                <TableCell>\n                  loanReq<br />got(VN)\n                </TableCell> \n                <TableCell>\n                  giftReq<br />sent(VN)\n                </TableCell>   \n                <TableCell>\n                  loanReq<br />sent(VN)\n                </TableCell>     \n                <TableCell align=\"right\">\n                 Loan & Borrow\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.userid._id}\n                  >\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          src={customer.userid.avatar}\n                        >\n                          {getInitials(customer.userid.username)}\n                        </Avatar>\n                        <div>\n                          <Link\n                            color=\"inherit\"\n                            variant=\"h6\"\n                          >\n                            {customer.userid.username}\n                          </Link>\n                        </div>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {customer.userid.location}\n                    </TableCell>\n                    <TableCell>\n                      {customer.userid.wallet}\n                    </TableCell>\n                    <TableCell>\n                      {customer.loans}\n                    </TableCell>                   \n                      {(customer.borrows === 0) &&\n                      <TableCell>\n                      {customer.borrows}\n                      </TableCell>\n                      }\n                      {(customer.borrows !== 0) &&\n                      <TableCell>\n                      <Label color='error'>\n                      {customer.borrows}\n                      </Label>\n                      </TableCell>\n                      }\n                                         \n                    <TableCell>\n                      {customer.gifts}\n                    </TableCell>\n                    <TableCell>\n                      {customer.receives}\n                    </TableCell>\n                    {(customer.getGiftReq === 0) &&\n                      <TableCell>\n                      {customer.getGiftReq}\n                      </TableCell>\n                      }\n                      {(customer.getGiftReq !== 0) &&\n                      <TableCell>\n                      <Label color='warning'>\n                      {customer.getGiftReq}\n                      </Label>\n                      </TableCell>\n                      }\n                      {(customer.getLoanReq === 0) &&\n                      <TableCell>\n                      {customer.getLoanReq}\n                      </TableCell>\n                      }\n                      {(customer.getLoanReq !== 0) &&\n                      <TableCell>\n                      <Label color='warning'>\n                      {customer.getLoanReq}\n                      </Label>\n                      </TableCell>\n                      }\n                    <TableCell>\n                      {customer.sendGiftReq}\n                    </TableCell>\n                    <TableCell>\n                      {customer.sendLoanReq}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                     <Button style={{backgroundColor:\"darkgreen\"}} size='medium' component={RouterLink} to={\"/app/account/wallet/edit/\"+customer.userid._id}>\n                     Edit \n                     </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array,\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction CustomerListView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [relations, setRelations] = useState(null);\n  const {user} = useSelector((state => state.account));\n\n  const getCustomers = useCallback(() => {\n    axios\n      .get(API_BASE_URL + 'account/wallet/userlist/' + user._id)\n      .then((response) => {\n        if (isMountedRef.current) {\n          setRelations(response.data.relation);\n        }\n      });\n  }, [isMountedRef, user._id]);\n\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  if (!relations) {\n    return null;\n  }\n\n\n  return (\n\n      <Container className={classes.root} maxWidth={false}>\n        <Header />\n        {relations && (\n          <Box mt={3}>\n            <Results customers={relations} />\n          </Box>\n        )}\n      </Container>\n  );\n}\n\nexport default CustomerListView;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Statistics from './Statistics';\nimport UserList from './listUser/financeListView';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OverviewView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"financial relationship\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Statistics />\n        </Box>\n        <Box mt={6}>\n          <UserList />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OverviewView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n"],"sourceRoot":""}