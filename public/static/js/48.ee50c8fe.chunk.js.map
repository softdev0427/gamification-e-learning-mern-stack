{"version":3,"sources":["views/courses/Header.js","views/courses/CourseCard.js","views/courses/Results.js","views/courses/index.js","hooks/useIsMountedRef.js"],"names":["useStyles","makeStyles","theme","root","actionIcon","marginRight","spacing","Header","className","rest","classes","Grid","alignItems","container","justify","clsx","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","media","height","backgroundColor","palette","background","dark","width","lesson","textAlign","padding","paddingTop","subject","ProjectCard","course","Card","Box","p","alt","src","display","mt","name","lectName","Divider","py","pl","pr","style","_id","Results","courses","useState","page","setPage","pagenum","parseInt","length","paginatedCourses","slice","applyPagination","map","key","md","sm","xs","CourseCard","justifyContent","Pagination","count","onChange","event","newPage","minHeight","paddingBottom","ProjectBrowseView","isMountedRef","useIsMountedRef","setCourses","user","useSelector","state","account","dispatch","useDispatch","getCourses","useCallback","axios","get","API_BASE_URL","then","response","current","data","getNotifications","useEffect","Page","title","Container","maxWidth","isMounted","useRef"],"mappings":"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","file":"static/js/48.ee50c8fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n          >\n            Courses\n          </Link>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All Courses availavble for purchase are listed here!\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  Link,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark,\n    width:\"100%\"\n  },\n  lesson:{\n    fontSize:\"20px\",\n    textAlign:\"center\",\n    padding:\"3px\",\n    paddingTop:\"0px\"\n  },\n  subject:{\n    textAlign:\"center\",\n    fontSize:\"30px\",\n    width:\"100%\",\n  }\n}));\n\nfunction ProjectCard({ course, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <img\n          className={classes.media}\n          alt=\"courses\"\n          src='/static/images/courses/courseList.jpg'\n        />\n        <Box\n          display=\"flex\"\n          mt={2}\n        >\n            <Grid\n              className={classes.subject}\n              color=\"textPrimary\"\n            >\n              {course.name}\n            </Grid>\n        </Box>\n      </Box>\n      <Box className={classes.lesson}>\n        {course.lectName}\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        style={{textAlign:\"center\"}}\n      >\n       <Link\n          color=\"textPrimary\"\n          component={RouterLink}\n          to={'/app/courses/current/' + course._id}\n          variant=\"h4\"\n          style={{width:\"100%\"}}\n        >\n          take course\n        </Link>\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  course: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Pagination\n} from '@material-ui/lab';\nimport CourseCard from './CourseCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}));\n\nfunction applyPagination(courses, page) {\n  return courses.slice((page-1) * 6, (page-1)* 6 + 6);\n}\n\nfunction Results({ className, courses, ...rest }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(1);\n  const pagenum = parseInt( courses.length/ 6 ) + 1;\n\n  \n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const paginatedCourses = applyPagination(courses, page);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        {paginatedCourses.map((course) => (\n          <Grid\n            item\n            key={course._id}\n            md={ 4 }\n            sm={ 6 }\n            xs={12}\n          >\n            <CourseCard course={course} />\n          </Grid>\n        ))}\n      </Grid>\n      <Box\n        mt={6}\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Pagination \n          component=\"div\"\n          count={pagenum}\n          onChange={handlePageChange}\n          page={page}\n        />\n      </Box>\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  courses: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport { API_BASE_URL } from 'src/config';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getNotifications } from 'src/actions/notificationsActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ProjectBrowseView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [courses, setCourses] = useState([]);\n  const {user} = useSelector((state) => state.account);\n  const dispatch = useDispatch();\n\n\n  const getCourses = useCallback(() => {\n\n    axios\n      .get(API_BASE_URL + 'courses/list/' + user._id)\n      .then((response) => {\n        if (isMountedRef.current) {\n          setCourses(response.data.courses);\n          dispatch(getNotifications(user._id));\n        }\n      });\n  }, [isMountedRef, user._id, dispatch]);\n\n  useEffect(() => {\n    getCourses();\n  }, [getCourses]);\n\n  if(!courses)\n  return ;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Courses List\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={6}>\n          <Results courses={courses} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectBrowseView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n"],"sourceRoot":""}