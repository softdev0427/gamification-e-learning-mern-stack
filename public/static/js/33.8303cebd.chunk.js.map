{"version":3,"sources":["views/adminpanel/Courses/Header.js","views/adminpanel/Courses/List.js","views/adminpanel/Courses/assessList.js","views/adminpanel/Courses/index.js","hooks/useIsMountedRef.js","utils/getInitials.js","../node_modules/react-feather/dist/icons/delete.js"],"names":["useStyles","makeStyles","theme","root","image","width","maxHeight","Header","className","rest","classes","user","useSelector","state","account","clsx","Grid","alignItems","container","justify","spacing","item","md","xs","Typography","variant","color","username","Hidden","smDown","alt","src","sortOptions","value","label","descendingComparator","a","b","orderBy","applySort","courses","sort","split","comparator","order","getComparator","stabilizedThis","map","el","index","avatar","height","marginRight","Results","Mycourses","useState","page","setPage","limit","setLimit","setCourses","setSort","enqueueSnackbar","useSnackbar","paginatedCustomers","slice","applyPagination","Card","CardHeader","title","Divider","Box","p","minHeight","display","TextField","name","onChange","event","persist","target","select","SelectProps","native","option","key","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","course","hover","_id","Avatar","style","backgroundColor","getInitials","Link","learners","length","origins","review","lectName","moment","createdAt","format","IconButton","onClick","e","courseId","window","confirm","axios","get","API_BASE_URL","then","response","data","message","SvgIcon","fontSize","TablePagination","component","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","assessment","Myassessments","assessments","setAssessments","coursename","dateline","mcquestions","assessmentId","success","palette","background","dark","paddingTop","paddingBottom","OverviewView","isMountedRef","useIsMountedRef","getCustomers","useCallback","current","useEffect","Page","Container","maxWidth","mt","isMounted","useRef","replace","v","toUpperCase","join","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Delete","props","size","otherProps","React","createElement","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","defaultProps"],"mappings":"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","file":"static/js/33.8303cebd.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    width: '80%',\n    maxHeight: 200\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            Hi,\n            {' '}\n            {user.username}\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n          >\n            This is admin panel. <br />\n            All courses and assessments are listed below\n          </Typography>\n        </Grid>\n        <Hidden smDown>\n          <Grid\n            item\n            md={6}\n          >\n            <img\n              alt=\"Cover\"\n              className={classes.image}\n              src=\"/static/images/admin/header.jpg\"\n            />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  IconButton,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Delete as DeleteIcon\n} from 'react-feather';\nimport moment from 'moment';\nimport getInitials from 'src/utils/getInitials';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport { useSnackbar } from 'notistack';\n\nconst sortOptions = [\n  {\n    value: 'learners|desc',\n    label: 'Learners number (high to low)'\n  },\n  {\n    value: 'learners|asc',\n    label: 'Learners number (low to high)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'createdAt (new to old)'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'createdAt (old to new)'\n  }\n];\n\n\nfunction applyPagination(courses, page, limit) {\n  return courses.slice(page * limit, page * limit + limit);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySort(courses, sort) {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = courses.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    // eslint-disable-next-line no-shadow\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Results({ className, Mycourses, ...rest }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [courses, setCourses] = useState(Mycourses);\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n const DeleteCourse = (courseId) => {\n  axios\n  .get(API_BASE_URL + 'admin/courses/delete/' + courseId)\n  .then((response) => {\n    enqueueSnackbar(response.data.message, {\n      variant: 'success'\n    });\n     setCourses(response.data.courses);\n  });\n }\n\n \n\n  const sortedCustomers = applySort(courses, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Courses list\" />\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <TextField\n          label=\"Sort By\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Learners\n                </TableCell>\n                <TableCell>\n                  Lecture files \n                </TableCell>\n                <TableCell>\n                  Reviews \n                </TableCell>\n                <TableCell>\n                  Lecturer \n                </TableCell>\n                <TableCell>\n                  CreatedAt\n                </TableCell> \n                <TableCell align='right'>\n                  Actions\n                </TableCell>    \n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((course) => {\n\n                return (\n                  <TableRow\n                    hover\n                    key={course._id}\n                  >\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          style={{backgroundColor:\"darkgreen\"}}\n                        >\n                          {getInitials(course.name)}\n                        </Avatar>\n                          <Link\n                            color=\"inherit\"\n                            variant=\"h6\"\n                          >\n                            {course.name}\n                          </Link>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {course.learners.length}(learners)\n                    </TableCell>\n                    <TableCell>\n                      {course.origins.length}(files)\n                    </TableCell>\n                    <TableCell>\n                      {course.review.length}(reviews)\n                    </TableCell>\n                    <TableCell>\n                      {course.lectName}\n                    </TableCell>\n                    <TableCell>\n                    {moment(course.createdAt).format('YYYY-MM-DD')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                      onClick={(e)=>{var result = window.confirm('Are you really want to delete this course?'); if(result) DeleteCourse(course._id);}}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <DeleteIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={courses.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array,\n};\n\n// Results.defaultProps = {\n//   customers: []\n// };\n\nexport default Results;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  IconButton,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Delete as DeleteIcon\n} from 'react-feather';\nimport moment from 'moment';\nimport getInitials from 'src/utils/getInitials';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport { useSnackbar } from 'notistack';\n\nconst sortOptions = [\n  // {\n  //   value: 'learners|desc',\n  //   label: 'Learners number (high to low)'\n  // },\n  // {\n  //   value: 'learners|asc',\n  //   label: 'Learners number (low to high)'\n  // },\n  {\n    value: 'createdAt|asc',\n    label: 'createdAt (new to old)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'createdAt (old to new)'\n  }\n];\n\n\nfunction applyPagination(assessments, page, limit) {\n  return assessments.slice(page * limit, page * limit + limit);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySort(assessment, sort) {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = assessment.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    // eslint-disable-next-line no-shadow\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Results({ className, Myassessments, ...rest }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [assessments, setAssessments] = useState(Myassessments);\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n const DeleteAssessment = (assessmentId) => {\n  axios\n  .get(API_BASE_URL + 'admin/assessments/delete/' + assessmentId)\n  .then((response) => {\n    if(response.data.success)\n    {\n    enqueueSnackbar(response.data.message, {\n      variant: 'success'\n    });\n      setAssessments(response.data.assessments);\n    }\n    else {\n      enqueueSnackbar(response.data.message, {\n        variant: 'error'\n      });\n      setAssessments(response.data.assessments);\n    }\n    });\n }\n\n \n\n  const sortedCustomers = applySort(assessments, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Assessments list\" />\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <TextField\n          label=\"Sort By\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Course Name\n                </TableCell>\n                <TableCell>\n                  Assessment Name\n                </TableCell>\n                <TableCell>\n                  lecturer\n                </TableCell>\n                <TableCell>\n                  Learners\n                </TableCell>\n                <TableCell>\n                  Dateline\n                </TableCell> \n                <TableCell>\n                  Mult-choice-question\n                </TableCell>\n                <TableCell align='right'>\n                  Actions\n                </TableCell>    \n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((assessment) => {\n\n                return (\n                  <TableRow\n                    hover\n                    key={assessment._id}\n                  >\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          style={{backgroundColor:\"darkgreen\"}}\n                        >\n                          {getInitials(assessment.coursename)}\n                        </Avatar>\n                          <Link\n                            color=\"inherit\"\n                            variant=\"h6\"\n                          >\n                            {assessment.coursename}\n                          </Link>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          style={{backgroundColor:\"darkgreen\"}}\n                        >\n                          {getInitials(assessment.name)}\n                        </Avatar>\n                          <Link\n                            color=\"inherit\"\n                            variant=\"h6\"\n                          >\n                            {assessment.name}\n                          </Link>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {assessment.lectName}\n                    </TableCell>  \n                    <TableCell>\n                      {assessment.learners.length}(learners)\n                    </TableCell>  \n                    <TableCell>\n                    {moment(assessment.dateline).format('YYYY-MM-DD')}\n                    </TableCell>     \n                    <TableCell>\n                      {assessment.mcquestions.length}(questions)\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                      onClick={(e)=>{var result = window.confirm('Are you really want to delete this assessment?'); if(result) DeleteAssessment(assessment._id);}}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <DeleteIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={assessments.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array,\n};\n\n// Results.defaultProps = {\n//   customers: []\n// };\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport CourseList from './List';\nimport { API_BASE_URL } from 'src/config';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport AssessList from './assessList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OverviewView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [courses, setCourses] = useState(null);\n  const [assessments, setAssessments] = useState(null);\n\n  const getCustomers = useCallback(() => {\n    axios\n      .get(API_BASE_URL + 'admin/courses/list')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setCourses(response.data.courses);\n          setAssessments(response.data.assessments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  if (!courses || !assessments) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Courses and assessments edit\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />     \n        <Box mt={6}>\n          <CourseList Mycourses={courses} />\n        </Box>\n        <Box mt={6}>\n          <AssessList Myassessments={assessments} />\n          </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OverviewView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Delete = function Delete(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"path\", {\n    d: \"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"\n  }), React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"9\",\n    x2: \"12\",\n    y2: \"15\"\n  }), React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"9\",\n    x2: \"18\",\n    y2: \"15\"\n  }));\n};\n\nDelete.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDelete.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default Delete;"],"sourceRoot":""}