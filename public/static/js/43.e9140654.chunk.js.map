{"version":3,"sources":["views/DashboardView1/Chart.js","views/DashboardView1/chartIndex.js","views/DashboardView1/Statistics.js","views/DashboardView1/announcement.js","views/DashboardView1/index.js","hooks/useIsMountedRef.js"],"names":["Chart","num","dataProp","data","labels","className","rest","theme","useTheme","barNum","position","width","length","datasets","label","backgroundColor","palette","secondary","main","barThickness","maxBarThickness","barPercentage","categoryPercentage","options","responsive","maintainAspectRatio","indexAxis","animation","cornerRadius","legend","display","layout","padding","scales","xAxes","gridLines","drawBorder","stacked","ticks","fontColor","text","primary","yAxes","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","stepSize","min","maxTicksLimit","callback","value","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","borderColor","background","dark","titleFontColor","bodyFontColor","footerFontColor","callbacks","title","tooltipItem","xLabel","yLabel","clsx","useStyles","makeStyles","root","chart","height","FinancialStats","classes","isMountedRef","useIsMountedRef","useState","courses","setCourses","getCustomers","useCallback","axios","get","API_BASE_URL","then","response","current","useEffect","stats","k","push","name","learners","Card","CardHeader","Divider","Box","minWidth","pt","pr","pl","pb","spacing","item","textAlign","default","marginLeft","overline","marginTop","Statistics","statistics","setStatistics","getStatistics","Grid","alignItems","container","justify","md","sm","xs","Typography","variant","users","style","lecturers","fontSize","Brief","announ","notice","setNotice","CardContent","ReatHtmlParser","content","paddingTop","paddingBottom","margin","product","cursor","transition","transitions","create","easing","sharp","duration","leavingScreen","transform","productImage","borderRadius","shape","chooseButton","common","white","PricingView","account","useSelector","state","Page","Paper","elevation","alt","src","user","avatar","my","Button","fullWidth","component","RouterLink","to","lg","isMounted","useRef"],"mappings":"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","file":"static/js/43.e9140654.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  useTheme\n} from '@material-ui/core';\n\n\nconst changeWidth = (num) =>{\n    if(num<=5)\n    return \"100%\";\n    else\n    return 100/5*num + \"%\";\n}\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n\n  const theme = useTheme();\n  var barNum = {\n    position: 'relative',\n    width:changeWidth(labels.length)\n  }\n\n  const data = {\n    datasets: [\n      {\n        label: 'Learners',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp,\n        barThickness: 30,\n        maxBarThickness: 30,\n        barPercentage: 0.5,\n        categoryPercentage: 1.0,\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis:\"x\",\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false,\n          },\n          stacked:true,\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.primary,\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            stepSize: 5,\n            min: 0,\n            maxTicksLimit: 100,\n            callback: (value) => (value > 0 ? `${value} people` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `${tooltipItem.xLabel}: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += ' learners';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(barNum, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport Chart from './Chart';\nimport { API_BASE_URL } from 'src/config';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 500\n  }\n}));\n\nfunction FinancialStats({ className, ...rest }) {\n  const classes = useStyles();\n\n  const isMountedRef = useIsMountedRef();\n  const [courses, setCourses] = useState(null);\n  const getCustomers = useCallback(() => {\n    axios\n      .get(API_BASE_URL + 'dashboard/courses')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setCourses(response.data.courses);\n        }\n      });\n  }, [isMountedRef]);\n  \n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n  \n  if (!courses) {\n    return null;\n  }\n\n  var stats = [];\n  var labels = [];\n\n  for(var k = 0 ; k < courses.length ;  k++)\n  {\n    labels.push(courses[k].name);\n    stats.push(courses[k].learners.length);\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Number of learners by course\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box\n          minWidth={750}\n          pt={4}\n          pr={2}\n          pl={2}\n          pb={3}\n        >\n          <Chart\n            className={classes.chart}\n            data={stats}\n            labels={labels}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { API_BASE_URL } from 'src/config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {padding:theme.spacing(5)},\n  item: {\n    padding: theme.spacing(4),\n    textAlign: 'center',\n    backgroundColor:theme.palette.background.default\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nfunction Statistics({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [statistics, setStatistics] = useState(null);\n\n  const getStatistics = useCallback(() => {\n    axios\n      .get(API_BASE_URL + 'dashboard/statistics')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setStatistics(response.data.statistics);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStatistics();\n  }, [getStatistics]);\n\n  if (!statistics) {\n    return null;\n  }\n\n  return (\n\n      <Grid\n       className={clsx(classes.root, className)}\n       {...rest}\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.users}\n            <div style={{width:\"20px\"}}></div>\n            Users\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n           total users \n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.lecturers}\n            <div style={{width:\"20px\"}}></div>\n            Lecturers\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n           total lecturers \n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.learners}\n            <div style={{width:\"20px\"}}></div>\n            learners\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total learners\n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n           {statistics.courses}\n            <div style={{width:\"20px\"}}></div>\n            Courses\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total courses\n          </Typography>\n        </Grid>\n\n      </Grid>\n  );\n}\n\nStatistics.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Statistics;\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n}  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  makeStyles,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport ReatHtmlParser from \"react-html-parser\";\r\nimport { API_BASE_URL } from 'src/config';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontSize:\"20px\",\r\n    height:\"610px\"\r\n  }\r\n}));\r\n\r\nfunction Brief({ announ, className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [notice, setNotice] = useState(null);\r\n  const getCustomers = useCallback(() => {\r\n    axios\r\n      .get(API_BASE_URL + 'dashboard/notice')\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setNotice(response.data.notice);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n  \r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, [getCustomers]);\r\n  \r\n  if (!notice) {\r\n    return null;\r\n  }\r\n\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    ><CardHeader\r\n       title=\"A new notice\" />\r\n       <Divider />\r\n      <CardContent >\r\n     {ReatHtmlParser( notice.content)}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nBrief.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Brief;\r\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  Paper,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ChartIndex from './chartIndex';\nimport {Link as RouterLink} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Statistics from './Statistics';\nimport Notice from './announcement';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: 50,\n    paddingBottom: 50\n  },\n  container:{\n    margin:0,\n    padding: theme.spacing(4)\n  },\n  product: {\n    position: 'relative',\n    padding:\"20px\",\n    textAlign:\"center\",\n    cursor: 'pointer',\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    '&:hover': {\n      transform: 'scale(1.1)'\n    }\n  },\n  productImage: {\n    borderRadius: theme.shape.borderRadius,\n      height: \"250px\",\n      width:\"100%\",\n  },\n  chooseButton: {\n    backgroundColor: theme.palette.common.white\n  }\n}));\n\nfunction PricingView() {\n  const classes = useStyles();\n  const account = useSelector((state) => state.account);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"dashbord\"\n    >\n          <Grid\n           className={classes.container}\n            container\n            alignItems='center'\n            justify=\"space-between\"\n          >\n           \n            <Grid\n              item\n              md={2}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n              >\n                <img\n                 className={classes.productImage}\n                  alt=\"Product\"        \n                  src={account.user.avatar}\n                />\n\n                <Box my={2}>\n                  <Divider />\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  className={classes.chooseButton}\n                  component={RouterLink}\n                  to=\"/app/account\"\n                >\n                  Profile\n                </Button>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              md={2}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.productImage}\n                  src=\"/static/images/dashboards/course.jpg\"\n                />\n                <Box my={2}>\n                  <Divider />\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  className={classes.chooseButton}\n                  component={RouterLink}\n                  to=\"/app/courses\"\n                >\n                  Courses\n                </Button>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              md={2}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.productImage}\n                  src=\"/static/images/dashboards/assessment.jpg\"\n                />\n                <Box my={2}>\n                  <Divider />\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  className={classes.chooseButton}\n                  component={RouterLink}\n                  to=\"/app/assessments/assessments\"                  \n                >\n                  Assessments\n                </Button>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              md={2}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.productImage}\n                  src=\"/static/images/dashboards/movers & shakers.jpg\"\n                />\n                <Box my={2}>\n                  <Divider />\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  className={classes.chooseButton}\n                  component={RouterLink}\n                  to=\"/app/streakLeaders\"   \n                >\n                  Movers \n                </Button>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              md={2}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.productImage}\n                  src=\"/static/images/dashboards/notifications.jpg\"\n                />\n                <Box my={2}>\n                  <Divider />\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  className={classes.chooseButton}\n                  component={RouterLink}\n                  to=\"/app/notification\"   \n                >\n                  Notifications\n                </Button>\n              </Paper>\n            </Grid>\n          </Grid>\n          <Statistics />\n          <Grid\n           className={classes.container}\n            container\n            spacing={2}\n            alignItems='center'\n            justify=\"space-between\"\n          >          \n            <Grid\n              item\n              lg={7}\n              md={7}\n              xs={12}\n            >\n          <ChartIndex />   \n          </Grid>\n          <Grid\n              item\n              lg={5}\n              md={5}\n              xs={12}\n            >\n          <Notice />   \n          </Grid>\n          </Grid>\n    </Page>\n  );\n}\n\nexport default PricingView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n"],"sourceRoot":""}